version: "3.7"
services:
  webapp:
    blkio_config:
      weight: 300
      weight_device:
        - path: ./testFiles/
          weight: 400
      device_read_bps:
        - path: ./testFiles/
          rate: '12mb'
      device_read_iops:
        - path: ./testFiles/
          rate: 120
      device_write_bps:
        - path: ./testFiles/
          rate: '1024k'
      device_write_iops:
        - path: ./testFiles/
          rate: 30
    build:
      context: ./testFiles/
      dockerfile: test.env
      args:
        buildno: 1
      cache_from:
        - alpine:latest
        - corp/web_app:3.14
      extra_hosts:
        - "somehost:162.242.195.82"
      labels:
        - "com.example.description=Accounting webapp"
        - "com.example.department=Finance"
        - "com.example.label-with-empty-value"
      network: host
      target: prod
      shm_size: '2gb'
    cap_add:
      - ALL
    cap_drop:
      - NET_ADMIN
      - SYS_ADMIN
    cgroup_parent: m-executor-abcd
    command: bundle exec thin -p 3000
    container_name: my-web-container
    configs:
      - source: my_config
        target: ./testFiles/test.env
        uid: '103'
        gid: '104'
        mode: '0440'
    credential_spec:
      file: test.env
      registry: my-credential-spec
    cpu_count: 2
    cpu_percent: 50
    cpus: 0.5
    cpu_shares: 73
    cpu_quota: 50000
    cpu_period: 20ms
    cpuset: 0,1
    cpu_rt_runtime: '400ms'
    cpu_rt_period: '1400us'
    depends_on:
      db:
        condition: service_healthy
    deploy:
      replicas: 6
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      endpoint_mode: vip
      labels:
        com.example.description: "This label will appear on the web service"
      mode: global
      placement:
        constraints:
          - node.role == manager
          - engine.labels.operatingsystem == ubuntu 14.04
        preferences:
          - spread == node.labels.zone
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
      rollback_config:
        parallelism: 2
        delay: 10s
        order: stop-first
        failure_action: pause
        monitor: 2s
        max_failure_ratio: 3
      update_config:
        parallelism: 1
        delay: 11s
        order: start-first
        failure_action: rollback
        monitor: 5s
        max_failure_ratio: 4
    devices:
      - "/dev/ttyUSB0:/dev/ttyUSB0"
    dns: 8.8.8.8
    dns_search: example.com
    dns_opt:
      - use-vc
      - no-tld-query
    domainname: foo.com
    entrypoint: ./testFiles/test.env
    env_file: ./testFiles/test.env
    extends:
      file: ./testFiles/test.env
      service: webapp	
    environment:
      - RACK_ENV=development
      - SHOW=true
      - SESSION_SECRET
    expose:
      - "3000"
      - "8000"
    external_links:
      - redis_1
      - project_db_1:mysql
      - project_db_1:postgresql
    extra_hosts:
      - "somehost:162.242.195.82"
      - "otherhost:50.31.209.229"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
      disable: true
    hostname: foo
    init: true 
    ipc: host
    isolation: default
    image: redis
    labels:
      - "com.example.description=Database volume"
      - "com.example.department=IT/Ops"
      - "com.example.label-with-empty-value"
    links:
      - db
      - db:database
      - redis
    logging:
      driver: syslog
      options:
        syslog-address: "tcp://192.168.0.42:123"
        max-size: "200k"
        max-file: "10"
    mac_address: 02:42:ac:11:65:43
    mem_limit: 1000000000
    memswap_limit: 2000000000
    mem_reservation: 512m
    mem_swappiness: 3
    name: "webapp"
    network_mode: bridge
    networks:
       some-network:
         aliases:
          - alias1
          - alias3
         link_local_ips:
          - 57.123.22.11
          - 57.123.22.13
         priority: 100
       app_net:
         ipv4_address: 172.16.238.10
         ipv6_address: 2001:3984:3989::1
    oom_score_adj: 500
    oom_kill_disable: true
    pid: "host"
    pids_limit: 10
    platform: osx
    ports:
      - target: 80
        published: 8080
        protocol: tcp
        mode: host
    privileged: true
    read_only: true
    
    restart: "no"
    runtime: runc
    scale: 3
    security_opt:
      - label:user:USER
      - label:role:ROLE
    secrets:
       - source: my_secret
         target: redis_secret
         uid: '103'
         gid: '104'
         mode: '0440'
    shm_size: 64M
    stdin_open: true
    stop_grace_period: 1s
    stop_signal: SIGUSR1
    sysctls:
      - net.core.somaxconn=1024
      - net.ipv4.tcp_syncookies=0
    tmpfs: /run
    tty: true
    
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    user: postgresql
    
    userns_mode: "host"
    volume_driver: mydriver
    volumes:
       - type: volume
         source: mydata
         target: ./testConfigs
         volume:
           nocopy: true
         read_only: true
         bind:
           propagation: '1'
         tmpfs:
           size: '3gb'
         consistency: cached
    working_dir: ./testFiles
  db:
     init: true




configs:
  my_config:
    file: ./testFiles/test.env
    external:
      name: redis_config


networks:
  app_net:
    external: true
    name: host
    attachable: true
    driver: bridge
    driver_opts:
      foo: "bar"
      baz: 1
    enable_ipv6:  true
    internal: true
    ipam:
      driver: default
      config:
      - subnet: 172.16.238.0/24
    labels:
      - "com.example.description=Financial transaction network"
  some-network:
    external: true

secrets:
  my_secret:
    file: ./testFiles/test.env
    external: true
    name: redis_secret




volumes:
  mydata:
    driver_opts:
      type: "nfs"
      o: "addr=10.40.0.199,nolock,soft,rw"
      device: ":/docker/example"
    external: true
    labels:
      - "com.example.description=Database volume"
      - "com.example.department=IT/Ops"
      - "com.example.label-with-empty-value"
    name: my-app-data









